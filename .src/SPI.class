' Gambas class file

Library "/usr/local/lib/libwiringPi"

Public Extern wiringPiSPISetup(channel As Integer, speed As Integer) As Integer
Public Extern wiringPiSPIDataRW(channel As Integer, data As Pointer, leng As Integer) As Integer

Public buf As Pointer
Public fd As Integer
Public lo As Integer

Public Sub Buttoncl_Click()

Form_Close()

End

Public Sub Form_Close()
  
  FMain.Timer1.Enabled = FMain.st
  FMain.CheckBox1.Value = FMain.st
'   Free(buf)
  SPI.Close
    
End

Public Sub Form_Open()
  
  Shell ("gpio load spi")
  buf = Alloc(4096)
  lo = 0
  put_hex()
  
End

Public Sub put_hex()
  
  Dim p As Integer
  Dim bb As Stream
  output.text = ""
  If ish.text = "ASCII"
    bb = Memory buf For Read
    output.text = Read #bb, leng.Value
  Else
    For p = 0 To 255
      If (p + lo) > leng.Value
        PictureBox2.Visible = False
        Return
      Endif
      If (p Mod 16) = 0 
        output.text = output.text & "\n  "
      Else
        output.text = output.text & "-"
      Endif
     output.text = output.text & Hex$(Byte@(buf + p + lo), 2)
    Next
    If lo = 0
      PictureBox1.Visible = False
    Else
      PictureBox1.Visible = True
    Endif
    If leng.Value > 255 
      PictureBox2.Visible = True
    Else
      PictureBox2.Visible = False 
    Endif
    speed.value = lo
  Endif
  
End

Public Sub Button2_Click()

  fd = wiringPiSPISetup(setupchan.value, speed.value)

End

Public Sub Button3_Click()

  wiringPiSPIDataRW(rwchan.value, buf, leng.value)
  put_hex()

End

Public Sub Button4_Click()

  Dim bb As Stream 
  If Dialog.OpenFile() Then Return
  If Stat(Dialog.Path).Size > 4095 Then Return 
  bb = Memory buf For Write 
  Write #bb, File.Load(Dialog.Path)
  leng.Value = Stat(Dialog.Path).Size
  lo = 0
  put_hex()
  
End

Public Sub ish_Click()

  put_hex()

End


Public Sub PictureBox1_MouseDown()

  If ish.text = "ASCII" Then Return
  If lo >= 256 Then lo = lo - 256
  put_hex()

End

Public Sub PictureBox2_MouseDown()

  If ish.text = "ASCII" Then Return
  If (lo + 256) <= leng.Value Then lo = lo + 256
  put_hex()
  
End
