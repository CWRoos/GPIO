' Gambas class file

Library "/usr/local/lib/libwiringPi"

Public Extern wiringPiSPISetup(channel As Integer, speed As Integer) As Integer
Public Extern wiringPiSPIDataRW(channel As Integer, data As Pointer, leng As Integer) As Integer

Public buf As Pointer
Public fd As Integer
Public lo As Integer
Public fi As File 

Public Sub Buttoncl_Click()

Form_Close()

End

Public Sub Form_Close()
  
  FMain.Timer1.Enabled = FMain.st
  FMain.CheckBox1.Value = FMain.st
'   Free(buf)
  SPI.Close
    
End

Public Sub Form_Open()
  
  Shell ("gpio load spi")
  buf = Alloc(4096)
  lo = 0
  put_hex()
  
End

Public Sub stripe(p As Integer)
  
      If (p Mod 16) = 0 
        outputar.text = outputar.text & "\n  "
      Else
        outputar.text = outputar.text & "-"
      Endif
  
End


Public Sub put_hex()
  
  Dim p As Integer
  Dim bb As Stream
  outputar.text = ""
  If ish.text = "ASCII"
    If leng.Value = 0 Then Return
    bb = Memory buf For Read
    outputar.text = Read #bb, leng.Value
    PictureBox1.Visible = False
    PictureBox2.Visible = False
  Else
    For p = 0 To 255
      If (p + lo) >= leng.Value
        PictureBox2.Visible = False
        stripe(p)
        Return
      Endif
      stripe(p)
      outputar.text = outputar.text & Hex$(Byte@(buf + p + lo), 2)
    Next
    If lo = 0
      PictureBox1.Visible = False
    Else
      PictureBox1.Visible = True
    Endif
    If leng.Value > 255 
      PictureBox2.Visible = True
    Else
      PictureBox2.Visible = False 
    Endif
    speed.value = lo
    stripe(p)
  Endif
End

Public Sub Button2_Click()

  fd = wiringPiSPISetup(setupchan.value, speed.value)
  If fd = -1 Then Return
  If setupchan.value = 0
    fi = Open "/dev/spidev0.0" For Read Write
  Else
    fi = Open "/dev/spidev0.1" For Read Write
  Endif
  bread.Enabled = True
  bwrite.Enabled = True
  breadwrite.Enabled = True

End

Public Sub breadwrite_Click()

  wiringPiSPIDataRW(setupchan.value, buf, leng.value)
  put_hex()

End

Public Sub Button4_Click()

  Dim bb As Stream 
  Dialog.Path = "./home/pi/"
  If Dialog.OpenFile() Then Return
  If Stat(Dialog.Path).Size > 4095 Then Return 
  bb = Memory buf For Write 
  Write #bb, File.Load(Dialog.Path)
  leng.Value = Stat(Dialog.Path).Size
  lo = 0
  put_hex()
  
End

Public Sub ish_Click()

  put_hex()

End


Public Sub PictureBox1_MouseDown()

  If ish.text = "ASCII" Then Return
  If lo >= 256 Then lo = lo - 256
  put_hex()

End

Public Sub PictureBox2_MouseDown()

  If ish.text = "ASCII" Then Return
  If (lo + 256) <= leng.Value Then lo = lo + 256
  put_hex()
  
End


Public Sub bread_Click()

 Dim by As Byte
 Dim i As Integer
 Dim p As Stream
 p = Memory buf For Write
 Write #p, Read #fi, leng.Value
 put_hex()
 
End

Public Sub bwrite_Click()

  Write #fi, buf, leng.Value

End

Public Sub Button1_Click()

  SPIPrg.Show

End

Public Sub Button3_Click()

  Dim p As Stream
  leng.value = 0
  p = Memory buf For Write
  Write #p, "   "
  put_hex()
  
End

Public Sub outputar_KeyRelease()

  Dim b, l, i As Integer
  Dim bb As Stream
  bb = Memory buf For Write
  If ish.text = "ASCII"
    Write #bb, outputar.Text
    leng.value = Len(outputar.Text)
  Else
    i = 2 
    l = 0
    If Mid$(outputar.Text, i, 1) < "0" Then i = i + 1
    Do
      If Mid$(outputar.Text, i, 1) < "0" Then i = i + 1
      If Mid$(outputar.Text, i - 1, 1) >= "0"
        b = Val("&H" & Mid$(outputar.Text, i - 1, 2))
        Write #bb, b As Byte
'         i = i + 1
        l = l + 1
      Endif
      i = i + 1
      If Mid$(outputar.Text, i, 1) < "0" Then i = i + 1
   Loop Until i > Len(outputar.Text)
   leng.value = l
  Endif
End

Public Sub leng_Change()

   put_hex()

End

Public Sub outputar_KeyPress()

  If ish.text = "ASCII" Then Return
'   If Key.text < "!" Then Return
  If InStr("0123456789abcdefABCDEF", Key.Text) = 0 Then Stop Event

End
